Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
                              ./src/main/c/twislave-main.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
                              ./src/main/c/twislave/twislave.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

buffer_adr          0x1               ./src/main/c/twislave/twislave.o
txbuffer            0x14              ./src/main/c/twislave/twislave.o
rxbuffer            0x14              ./src/main/c/twislave/twislave.o
received            0x1               ./src/main/c/twislave/twislave.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
LOAD ./src/main/c/twislave/twislave.o
LOAD ./src/main/c/adc_sample/adc-sample.o
LOAD ./src/main/c/twislave-main.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x91a
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *(.progmem*)
                0x0000000000000026                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000026                __ctors_start = .
 *(.ctors)
                0x0000000000000026                __ctors_end = .
                0x0000000000000026                __dtors_start = .
 *(.dtors)
                0x0000000000000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000026        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
                0x0000000000000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000026        0xc /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000032       0x16 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
                0x0000000000000032                __do_copy_data
 .init4         0x0000000000000048       0x10 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000048                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000058        0x4 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x000000000000005c        0x2 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
                0x000000000000005c                __vector_1
                0x000000000000005c                __vector_12
                0x000000000000005c                __bad_interrupt
                0x000000000000005c                __vector_6
                0x000000000000005c                __vector_3
                0x000000000000005c                __vector_11
                0x000000000000005c                __vector_13
                0x000000000000005c                __vector_7
                0x000000000000005c                __vector_5
                0x000000000000005c                __vector_4
                0x000000000000005c                __vector_9
                0x000000000000005c                __vector_2
                0x000000000000005c                __vector_15
                0x000000000000005c                __vector_8
                0x000000000000005c                __vector_14
                0x000000000000005c                __vector_10
                0x000000000000005c                __vector_16
                0x000000000000005c                __vector_18
 .text          0x000000000000005e        0x0 ./src/main/c/twislave/twislave.o
 .text          0x000000000000005e        0x0 ./src/main/c/adc_sample/adc-sample.o
 .text          0x000000000000005e        0x0 ./src/main/c/twislave-main.o
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text          0x000000000000005e        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
                0x000000000000005e                . = ALIGN (0x2)
 *(.text.*)
 .text.init_twi_slave
                0x000000000000005e       0x4c ./src/main/c/twislave/twislave.o
                0x000000000000005e                init_twi_slave
 .text.__vector_17
                0x00000000000000aa      0x158 ./src/main/c/twislave/twislave.o
                0x00000000000000aa                __vector_17
 .text.main2    0x0000000000000202       0x86 ./src/main/c/adc_sample/adc-sample.o
                0x0000000000000202                main2
 .text.initTwi  0x0000000000000288       0x16 ./src/main/c/twislave-main.o
                0x0000000000000288                initTwi
 .text.initOcr1
                0x000000000000029e       0x6a ./src/main/c/twislave-main.o
                0x000000000000029e                initOcr1
 .text.readTwiData
                0x0000000000000308       0xc6 ./src/main/c/twislave-main.o
                0x0000000000000308                readTwiData
 .text.setOcr   0x00000000000003ce      0x246 ./src/main/c/twislave-main.o
                0x00000000000003ce                setOcr
 .text.setDirectionToForward1
                0x0000000000000614       0x32 ./src/main/c/twislave-main.o
                0x0000000000000614                setDirectionToForward1
 .text.setDirectionToBackward1
                0x0000000000000646       0x32 ./src/main/c/twislave-main.o
                0x0000000000000646                setDirectionToBackward1
 .text.setDirection1
                0x0000000000000678       0x6c ./src/main/c/twislave-main.o
                0x0000000000000678                setDirection1
 .text.setDirectionToForward2
                0x00000000000006e4       0x32 ./src/main/c/twislave-main.o
                0x00000000000006e4                setDirectionToForward2
 .text.setDirectionToBackward2
                0x0000000000000716       0x32 ./src/main/c/twislave-main.o
                0x0000000000000716                setDirectionToBackward2
 .text.setDirection2
                0x0000000000000748       0x6c ./src/main/c/twislave-main.o
                0x0000000000000748                setDirection2
 .text.initPorts
                0x00000000000007b4       0x7a ./src/main/c/twislave-main.o
                0x00000000000007b4                initPorts
 .text.main     0x000000000000082e       0xe8 ./src/main/c/twislave-main.o
                0x000000000000082e                main
 .text.libgcc.mul
                0x0000000000000916        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000916        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000916        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000916        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000916        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000916        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000916        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000916        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000916        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000916        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000916        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000916        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000916        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000916        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000916        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000916        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000916        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000916        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000916        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000916        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000916        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000916                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000916        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
                0x0000000000000916                exit
                0x0000000000000916                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000916        0x4 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000091a                _etext = .

.data           0x0000000000800060        0xe load address 0x000000000000091a
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
 .data          0x0000000000800060        0x0 ./src/main/c/twislave/twislave.o
 .data          0x0000000000800060        0x0 ./src/main/c/adc_sample/adc-sample.o
 .data          0x0000000000800060        0x0 ./src/main/c/twislave-main.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 .rodata        0x0000000000800060        0xe ./src/main/c/twislave-main.o
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x000000000080006e                . = ALIGN (0x2)
                0x000000000080006e                _edata = .
                0x000000000080006e                PROVIDE (__data_end, .)

.bss            0x000000000080006e       0x2a
                0x000000000080006e                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080006e        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
 .bss           0x000000000080006e        0x0 ./src/main/c/twislave/twislave.o
 .bss           0x000000000080006e        0x0 ./src/main/c/adc_sample/adc-sample.o
 .bss           0x000000000080006e        0x0 ./src/main/c/twislave-main.o
 .bss           0x000000000080006e        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .bss           0x000000000080006e        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .bss           0x000000000080006e        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080006e       0x2a ./src/main/c/twislave/twislave.o
                0x000000000080006e                buffer_adr
                0x000000000080006f                txbuffer
                0x0000000000800083                rxbuffer
                0x0000000000800097                received
                0x0000000000800098                PROVIDE (__bss_end, .)
                0x000000000000091a                __data_load_start = LOADADDR (.data)
                0x0000000000000928                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800098        0x0
                0x0000000000800098                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800098                PROVIDE (__noinit_end, .)
                0x0000000000800098                _end = .
                0x0000000000800098                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x1434
 *(.stab)
 .stab          0x0000000000000000      0x6c0 ./src/main/c/twislave/twislave.o
 .stab          0x00000000000006c0      0x3a8 ./src/main/c/adc_sample/adc-sample.o
                                        0x570 (size before relaxing)
 .stab          0x0000000000000a68      0x9cc ./src/main/c/twislave-main.o
                                        0xb94 (size before relaxing)

.stabstr        0x0000000000000000     0x119a
 *(.stabstr)
 .stabstr       0x0000000000000000     0x119a ./src/main/c/twislave/twislave.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./src/main/c/twislave/twislave.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 ./src/main/c/adc_sample/adc-sample.o
 .comment       0x0000000000000000       0x12 ./src/main/c/twislave-main.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(PWM.elf elf32-avr)
LOAD linker stubs
